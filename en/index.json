[
{
	"uri": "http://jihan1218.github.io/en/about/",
	"title": "About",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": "Hello, my name is Jihan Kim. I am a physicist transitioning into AI research scientist.\nI love to learn new things and challenge myself to solve hard problems.\nI graduated from Oregon State University with PhD in physics on December 2019.\nThroughout my graduate program, I studied how breast cancer cells and surrounding extracellular matrix (ECM) interact bidirectionally. One way, cancer cells remodel ECM to modify physical properties and geometrical architectures. The other way, remodeled ECM regulates cancer behavior such as cancer cell migration.\nDuring my last year in graduate school, I was fascinated with machine learning. So I decided to learn and explore further about AI research field. In this blog, I\u0026rsquo;d like to share my journey to become an AI research scientist.\n"
},
{
	"uri": "http://jihan1218.github.io/en/",
	"title": "Hugo Zzo Theme",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://jihan1218.github.io/en/posts/k-means-clustering/",
	"title": "K-Means Clustering",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": "In this post, I\u0026rsquo;d like to discuss about one of basic unsupervised machine learning algorithms, K-means clustering.\nBasic idea of kmeans clustering is to find positions which minimize the variance of each cluster. Mathematical description is\nhere math\nKmeans clustering algorithm steps:  Generate K initial centroids at random positions Assign each data point with a cluster-label by finding the centroid which is the closest to the data Calculate new centroids by finding the first moment of each cluster over total number of data within the cluster Repeat 2 and 3 until centroids converge  Implementation In order to run this python code, we first need to import python libraries.\n1 2 3 4 5 6  from random import random import numpy as np import math import pandas as pd import matplotlib.pyplot as plt from matplotlib import cm   Generating Clusters To generate k number of clusters, I started with k random points within xmin \u0026lt; x \u0026lt; xmax and ymin \u0026lt; y \u0026lt; ymax.\nThen gernate total n data points randomly within the radius r centering at each initial point.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # cluster generater((-xlen,-ylen) \u0026lt; (x,y) \u0026lt; (xlen,ylen) ). k: the number of clusters, r: radius of the cluster,  # n: the number of data points in each cluster def cluster_gen(k,r,n,xlen,ylen): data = [] #create the center of clusters [x|y] coordinates kx = np.random.rand(k,1)*xlen*2 - xlen ky = np.random.rand(k,1)*ylen*2 - ylen kcent = np.append(kx,ky,1) #generate n data points around the center of cluster within radius r for cluster in range(k): for points in range(n): x = kcent[cluster,0] + r*(random())*math.cos(random()*np.pi) y = kcent[cluster,1] + r*(random())*math.cos(random()*np.pi) data.append([x,y]) return np.array(data)   test results Let\u0026rsquo;s test the cluster generator.\n1 2 3 4  # test cluster generater data = cluster_gen(k=3,r=5,n=50,xlen=20,ylen=20) plt.scatter(data[:,0],data[:,1]) a = data[:,0]   This is basic steps for kmeans clustering algorithm. However, the result can be affected by initial centroids. Some initial centroids can be converged into the same cluster or can be converged without any cluster-label. In order to resolve the issue we can add two more steps\nAdditional steps Repeat 1-4 steps multiple times and store average variance of Find  "
},
{
	"uri": "http://jihan1218.github.io/en/posts/",
	"title": "Posts",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://jihan1218.github.io/en/categories/",
	"title": "Categories",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://jihan1218.github.io/en/series/",
	"title": "Series",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://jihan1218.github.io/en/tags/",
	"title": "Tags",
	"tags": [],
	"categories": [],
	"series": [],
	"description": "",
	"content": ""
}]